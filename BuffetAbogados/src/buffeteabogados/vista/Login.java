package buffeteabogados.vista;

import buffeteabogados.modelo.Usuario;
import buffeteabogados.modelo.UsuarioDAO;

import buffeteabogados.util.EstilosSistema;
import buffeteabogados.vista.Dashboard;
import buffeteabogados.vista.RecuperacionPassword;
import buffeteabogados.vista.RegistroUsuario;
import javax.swing.*;
import java.awt.*;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import javax.swing.border.EmptyBorder;


public class Login extends JFrame {

    private JTextField txtUsuario;
    private JPasswordField txtPassword;
    private JButton btnIngresar;
    private JButton btnRegistrar;
    private JButton btnOlvidePassword;
    private JButton btnConfigurarConexion;
    private JLabel lblEstado;
    private JPanel panelPrincipal;
    private UsuarioDAO usuarioDAO;

    /**
     * Creates new form Login
     */
    public Login() {
        this.usuarioDAO = new UsuarioDAO();
        // 1. Aplicar el Look and Feel general primero
        EstilosSistema.aplicarLookAndFeel();

        // 2. Configurar la ventana principal
        configurarVentana();

        // 3. Crear y organizar los componentes
        inicializarYOrganizarComponentes();

        // 4. Configurar los eventos de los botones y campos
        configurarEventos();

        // 5. Hacer visible la ventana
        setVisible(true);
        // AÑADIR ESTA LÍNEA AL FINAL DEL CONSTRUCTOR
        
        setLocationRelativeTo(getParent()); // Centra la ventana después de ajustar el tamaño
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        private void configurarVentana() {
        setTitle("Sistema de Gestión Legal - Inicio de Sesión");
        setSize(450, 600);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setBackground(EstilosSistema.COLOR_FONDO_PRINCIPAL);
        setLayout(new BorderLayout(0, 20));
    }

    private void inicializarYOrganizarComponentes() {
        // ===== PANEL SUPERIOR (TÍTULO Y LOGO) =====
        JPanel panelSuperior = new JPanel();
        panelSuperior.setOpaque(false);
        panelSuperior.setLayout(new BoxLayout(panelSuperior, BoxLayout.Y_AXIS));
        panelSuperior.setBorder(new EmptyBorder(40, 20, 20, 20));

        JLabel lblLogo = new JLabel("⚖️");
        lblLogo.setFont(new Font("Segoe UI Symbol", Font.PLAIN, 60));
        lblLogo.setAlignmentX(Component.CENTER_ALIGNMENT);

        JLabel lblTitulo = EstilosSistema.crearLabelTitulo("Gestión Legal");
        lblTitulo.setAlignmentX(Component.CENTER_ALIGNMENT);

        JLabel lblSubtitulo = EstilosSistema.crearLabelNormal("Bienvenido. Por favor, inicie sesión.");
        lblSubtitulo.setAlignmentX(Component.CENTER_ALIGNMENT);

        panelSuperior.add(lblLogo);
        panelSuperior.add(Box.createRigidArea(new Dimension(0, 10)));
        panelSuperior.add(lblTitulo);
        panelSuperior.add(Box.createRigidArea(new Dimension(0, 5)));
        panelSuperior.add(lblSubtitulo);

        // ===== PANEL CENTRAL (FORMULARIO) =====
        JPanel panelFormulario = new JPanel(new GridBagLayout());
        panelFormulario.setOpaque(false);
        panelFormulario.setBorder(new EmptyBorder(10, 40, 10, 40));
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 0, 5, 0);
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;

        txtUsuario = EstilosSistema.crearCampoTexto("Nombre de usuario");
        txtPassword = EstilosSistema.crearCampoPassword("Contraseña");
        txtPassword.setEchoChar((char) 0);

        panelFormulario.add(txtUsuario, gbc);
        gbc.gridy++;
        panelFormulario.add(txtPassword, gbc);

        lblEstado = new JLabel(" ");
        lblEstado.setFont(EstilosSistema.FUENTE_PEQUEÑA);
        lblEstado.setHorizontalAlignment(SwingConstants.CENTER);
        gbc.gridy++;
        gbc.insets = new Insets(10, 0, 10, 0);
        panelFormulario.add(lblEstado, gbc);

        btnIngresar = EstilosSistema.crearBotonPrincipal("Ingresar", EstilosSistema.COLOR_PRIMARIO);
        btnIngresar.setPreferredSize(new Dimension(0, 45));
        gbc.gridy++;
        gbc.insets = new Insets(10, 0, 5, 0);
        panelFormulario.add(btnIngresar, gbc);

        btnRegistrar = EstilosSistema.crearBotonSecundario("Crear una cuenta");
        btnRegistrar.setPreferredSize(new Dimension(0, 40));
        gbc.gridy++;
        gbc.insets = new Insets(5, 0, 5, 0);
        panelFormulario.add(btnRegistrar, gbc);

        JPanel panelLinks = new JPanel(new FlowLayout(FlowLayout.CENTER));
        panelLinks.setOpaque(false);
        btnOlvidePassword = EstilosSistema.crearBotonLink("¿Olvidó su contraseña?");
        panelLinks.add(btnOlvidePassword);

        gbc.gridy++;
        gbc.insets = new Insets(15, 0, 0, 0);
        panelFormulario.add(panelLinks, gbc);

        add(panelSuperior, BorderLayout.NORTH);
        add(panelFormulario, BorderLayout.CENTER);

        getRootPane().setDefaultButton(btnIngresar);
    }

    private void configurarEventos() {
        btnIngresar.addActionListener(e -> autenticarUsuario());

        btnRegistrar.addActionListener(e -> {
            new RegistroUsuario(this).setVisible(true);
        });

        btnOlvidePassword.addActionListener(e -> {
            new RecuperacionPassword(this).setVisible(true);
        });

        // Lógica para que el campo de contraseña oculte los caracteres
        txtPassword.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                JPasswordField campo = (JPasswordField) e.getSource();
                String passText = new String(campo.getPassword());
                if (passText.equals("Contraseña")) {
                    campo.setText("");
                    campo.setEchoChar('●');
                    campo.setForeground(EstilosSistema.COLOR_TEXTO_PRINCIPAL);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                JPasswordField campo = (JPasswordField) e.getSource();
                if (new String(campo.getPassword()).isEmpty()) {
                    campo.setEchoChar((char) 0);
                    campo.setText("Contraseña");
                    campo.setForeground(EstilosSistema.COLOR_TEXTO_PLACEHOLDER);
                }
            }
        });
    }

    private void autenticarUsuario() {
        String usuario = txtUsuario.getText().trim();
        String password = new String(txtPassword.getPassword());

        if (usuario.equals("Nombre de usuario") || password.equals("Contraseña") || usuario.isEmpty() || password.isEmpty()) {
            lblEstado.setText("Por favor, complete todos los campos.");
            lblEstado.setForeground(EstilosSistema.COLOR_ERROR);
            return;
        }

        Usuario usuarioAutenticado = usuarioDAO.autenticar(usuario, password);

        if (usuarioAutenticado != null) {
            lblEstado.setText("Autenticación exitosa. Bienvenido.");
            lblEstado.setForeground(EstilosSistema.COLOR_EXITO);

            // Usamos un Timer para que el mensaje de éxito sea visible por un instante
            Timer timer = new Timer(500, e -> abrirDashboard(usuarioAutenticado));
            timer.setRepeats(false);
            timer.start();
        } else {
            lblEstado.setText("Usuario o contraseña incorrectos.");
            lblEstado.setForeground(EstilosSistema.COLOR_ERROR);
        }
    }

    private void abrirDashboard(Usuario usuario) {
        new Dashboard(usuario).setVisible(true);
        this.dispose(); // Cierra la ventana de login
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            new Login().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
